-- SPDX-License-Identifier: MIT
-- WuKong RegisterHook
-- Author: inkydragon
local SubModeName = "[BlackMythA11y.WkScriptHooks] "
-- [[require Global]]

-- [[require Local]]

-- [[Global Var]]

-- <: UTextLayoutWidget
-- RegisterHook("/Script/UMG.TextBlock:SetText", function(Context, InText)
--     local Button = Context:get()
--     local ClassFullName = Button:GetFullName()
--     local Text = InText:get():ToString()
--     print(string.format("[TextBlock] \"%s\"\n", Text))
--     print(string.format("\t%s\n", ClassFullName))
-- end)
-- RegisterHook("/Script/UMG.RichTextBlock:SetText", function(Context, InText)
--     local Button = Context:get()
--     local ClassFullName = Button:GetFullName()
--     local Text = InText:get():ToString()
--     print(string.format("[RichTextBlock] \"%s\"\n", Text))
--     print(string.format("\t%s\n", ClassFullName))
-- end)
-- RegisterHook("/Script/UMG.MultiLineEditableText:SetText", function(Context, InText)
--     local Button = Context:get()
--     local ClassFullName = Button:GetFullName()
--     local Text = InText:get():ToString()
--     print(string.format("[MultiLineEditableText] \"%s\"\n", Text))
--     print(string.format("\t%s\n", ClassFullName))
-- end)
-- RegisterHook("/Script/UMG.MultiLineEditableTextBox:SetText", function(Context, InText)
--     local Button = Context:get()
--     local ClassFullName = Button:GetFullName()
--     local Text = InText:get():ToString()
--     print(string.format("[MultiLineEditableTextBox] \"%s\"\n", Text))
--     print(string.format("\t%s\n", ClassFullName))
-- end)
-- -- <: UWidget
-- RegisterHook("/Script/UMG.EditableText:SetText", function(Context, InText)
--     local Button = Context:get()
--     local ClassFullName = Button:GetFullName()
--     local Text = InText:get():ToString()
--     print(string.format("[EditableText] \"%s\"\n", Text))
--     print(string.format("\t%s\n", ClassFullName))
-- end)
-- RegisterHook("/Script/UMG.EditableTextBox:SetText", function(Context, InText)
--     local Button = Context:get()
--     local ClassFullName = Button:GetFullName()
--     local Text = InText:get():ToString()
--     print(string.format("[EditableTextBox] \"%s\"\n", Text))
--     print(string.format("\t%s\n", ClassFullName))
-- end)
-- -- Function /Script/UnrealExtent.GSBitmapFontBox:SetText
-- RegisterHook("/Script/UnrealExtent.GSBitmapFontBox:SetText", function(Context, InText)
--     local Button = Context:get()
--     local ClassFullName = Button:GetFullName()
--     local Text = InText:get():ToString()
--     print(string.format("[GSBitmapFontBox] \"%s\"\n", Text))
--     print(string.format("\t%s\n", ClassFullName))
-- end)
-- RegisterHook("/Script/UnrealExtent.GSRichTextBlock:ApplyText", function(Context, InText)
--     local Button = Context:get()
--     local ClassFullName = Button:GetFullName()
--     local Text = InText:get():ToString()
--     print(string.format("[GSRichTextBlock] \"%s\"\n", Text))
--     print(string.format("\t%s\n", ClassFullName))
-- end)
-- RegisterHook("/Script/UnrealExtent.GSTextBlock:ApplyText", function(Context, InText)
--     local Button = Context:get()
--     local ClassFullName = Button:GetFullName()
--     local Text = InText:get():ToString()
--     print(string.format("[GSTextBlock] \"%s\"\n", Text))
--     print(string.format("\t%s\n", ClassFullName))
-- end)

-- UMG  UUserWidget:OnFocusReceived(MyGeometry, InFocusEvent)
--      UUserWidget:OnAddedToFocusPath(InFocusEvent)
